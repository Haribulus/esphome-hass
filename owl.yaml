substitutions:
  device_name: Owl

esp8266:
  board: d1_mini
esphome:
  name: owl
  friendly_name: Owl

#Boot animation
  on_boot:
    - priority: 600
      then:
        - light.turn_on:
            id: D1_Neo
            red: 50%
            green: 0%
            blue: 50%
            effect: pulse
    - priority: 400
      then:
        - light.turn_on:
            id: D1_Neo
            red: 0%
            green: 50%
            blue: 0%
    - priority: 100
      then:
        - light.turn_on: 
            id: D1_Neo
            red: 0%
            green: 0%
            blue: 50%
            effect: none
    - priority: -100
      then:
        - light.turn_on: 
            id: D1_Neo
            effect: rainbow
        - delay: 3s
        - light.turn_on: 
            id: D1_Neo
            red: 50%
            green: 50%
            blue: 50%
            effect: pulse
        - delay: 2s
        - light.turn_on: 
            brightness: 13%
            id: D1_Neo
            red: 100%
            green: 100%
            blue: 100%
            effect: none
        - delay: 1s
        - light.turn_off: 
            id: D1_Neo
# Enable logging
logger:

# Enable Home Assistant API
api:


ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.1.31
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-A64171"
    password: "yUd1lCXCEjyL"

captive_portal:

time:
  - platform: homeassistant
    id: esptime

    on_time:
      - seconds: 59
        minutes: 59
        hours: 23
        then:
          - switch.toggle: restart_sw   
uart:
  rx_pin: RX
  tx_pin: TX
  baud_rate: 256000
  parity: NONE
  stop_bits: 1

ld2410:

binary_sensor:
  - platform: ld2410
    has_target:
      name: Presence
     # on_press:
      ##  then:
      ##    - light.turn_on: 
       ##       id: D1_Neo
       ##       effect: Slow Pulse
      ##        red: 0%
      ##        green: 100%
      ##        blue: 0%
    ##  on_release: 
     ##   then:
      ##    - light.turn_off:
     ##         id: D1_Neo
  ##  has_moving_target:
    ##  id: move
   ##   name: "${device_name} Moving Target"
  ##    on_press:
   ##     then:
   ##       - light.turn_on: 
   ##           id: D1_Neo
   ##           brightness: 100%
    ##          effect: fast scan
    ##          red: 0%
     ##         green: 100%
     ##         blue: 0%
     ##     - delay: 
       ##       2s
      ##    - light.turn_off:
      ##        id: D1_Neo

    has_still_target:
      name: "${device_name} Still Target"

sensor:
  - platform: ld2410
    light:
      name: light
    moving_distance:
      name : "${device_name} Moving Distance"
    still_distance:
      name: "${device_name} Still Distance"
    moving_energy:
      name: "${device_name} Move Energy"
    still_energy:
      name: "${device_name} Still Energy"
    detection_distance:
      name: "${device_name} Detection Distance"
    g0:
      move_energy:
        name: g0 move energy
      still_energy:
        name: g0 still energy
    g1:
      move_energy:
        name: g1 move energy
      still_energy:
        name: g1 still energy
    g2:
      move_energy:
        name: g2 move energy
      still_energy:
        name: g2 still energy
    g3:
      move_energy:
        name: g3 move energy
      still_energy:
        name: g3 still energy
    g4:
      move_energy:
        name: g4 move energy
      still_energy:
        name: g4 still energy
    g5:
      move_energy:
        name: g5 move energy
      still_energy:
        name: g5 still energy
    g6:
      move_energy:
        name: g6 move energy
      still_energy:
        name: g6 still energy
    g7:
      move_energy:
        name: g7 move energy
      still_energy:
        name: g7 still energy
    g8:
      move_energy:
        name: g8 move energy
      still_energy:
        name: g8 still energy

  - platform: wifi_signal
    name: "${device_name} WiFi Signal Sensor"
    update_interval: 60s

  - platform: uptime
    name: "${device_name} Uptime Sensor"
    id: uptime_sensor
    update_interval: 60s
    internal: true
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

number:
  - platform: ld2410
    timeout:
      name: timeout
    light_threshold:
      name: light threshold
    max_move_distance_gate:
      name: max move distance gate
    max_still_distance_gate:
      name: max still distance gate
    g0:
      move_threshold:
        name: g0 move threshold
      still_threshold:
        name: g0 still threshold
    g1:
      move_threshold:
        name: g1 move threshold
      still_threshold:
        name: g1 still threshold
    g2:
      move_threshold:
        name: g2 move threshold
      still_threshold:
        name: g2 still threshold
    g3:
      move_threshold:
        name: g3 move threshold
      still_threshold:
        name: g3 still threshold
    g4:
      move_threshold:
        name: g4 move threshold
      still_threshold:
        name: g4 still threshold
    g5:
      move_threshold:
        name: g5 move threshold
      still_threshold:
        name: g5 still threshold
    g6:
      move_threshold:
        name: g6 move threshold
      still_threshold:
        name: g6 still threshold
    g7:
      move_threshold:
        name: g7 move threshold
      still_threshold:
        name: g7 still threshold
    g8:
      move_threshold:
        name: g8 move threshold
      still_threshold:
        name: g8 still threshold
text_sensor:
  - platform: template
    name: "${device_name} Uptime"
    id: uptime_human
    icon: mdi:clock-start
  
switch:

  - platform: restart
    name: "s${device_name} restart"
    id: restart_sw

  - platform: ld2410
    engineering_mode:
      name: "${device_name} engineering mode"
    bluetooth:
      name: "${device_name} control bluetooth"

light:
  - platform: neopixelbus
    #type: GRB
    variant: WS2812
    pin: D3
    num_leds: 10
    name: "${device_name} led"
    id: D1_Neo
    default_transition_length: 1s
    effects:
      - addressable_color_wipe:
      - addressable_color_wipe:
          name: Color Wipe Effect With Custom Values
          colors:
            - red: 100%
              green: 100%
              blue: 100%
              num_leds: 5
            - red: 0%
              green: 0%
              blue: 0%
              num_leds: 5
          add_led_interval: 200ms
          reverse: True
      - addressable_scan:
      - addressable_scan:
          name: fast scan
          move_interval: 50ms
          scan_width: 1         
      # Use default parameters:
      - random:
      # Customize parameters
      - random:
          name: "My Slow Random Effect"
          transition_length: 30s
          update_interval: 30s
      - random:
          name: "My Fast Random Effect"
          transition_length: 1s
          update_interval: 5s
      - pulse:
      - pulse:
          name: "Fast Pulse"
          transition_length: 0.5s
          update_interval: 0.5s
      - pulse:
          name: "Slow Pulse"
          transition_length: 1s      # defaults to 1s
          update_interval: 2s
      - addressable_rainbow:
      - addressable_rainbow:
          name: Rainbow Effect With Custom Values
          speed: 10
          width: 10
      - addressable_color_wipe:
          name: Police
          colors:
            - red: 100%
              green: 0%
              blue: 0%
              num_leds: 10
            - red: 0%
              green: 0%
              blue: 100%
              num_leds: 10
          add_led_interval: 50ms
      - addressable_color_wipe:
          name: Ambulance
          colors:
            - red: 0%
              green: 0%
              blue: 0%
              num_leds: 10
            - red: 0%
              green: 0%
              blue: 100%
              num_leds: 10
          add_led_interval: 1s
      - automation:
          name: Traffic
          sequence:
            - light.turn_on:
                id: D1_Neo
                brightness: 75%
                red: 100%
                green: 0%
                blue: 0% 
            - light.addressable_set:
                id: D1_Neo
                range_from: 0
                range_to: 10
                red: 100%
                green: 0%
                blue: 0%
            - delay: !lambda "return((rand() %2 + 5)*1000);"
            - light.addressable_set:
                id: D1_Neo
                range_from: 0
                range_to: 10
                red: 100%
                green: 100%
                blue: 0%
            - delay: 1.5s
            - light.addressable_set:
                id: D1_Neo
                range_from: 0
                range_to: 10
                red: 0%
                green: 100%
                blue: 0%
            - delay: !lambda "return((rand() %2 + 10)*1000);"
            - light.addressable_set:
                id: D1_Neo
                range_from: 0
                range_to: 10
                red: 100%
                green: 100%
                blue: 0%
            - delay: 2s
  
    
