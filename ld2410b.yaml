substitutions:
  device_name: LD2410
esp8266:
  board: d1_mini
esphome:
  name: ld2410esp
  friendly_name: ld2410esp

# Enable logging
logger:
  baud_rate: 0
# Enable Home Assistant API
api:

ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: on

captive_portal:



# GPS as time source
time:
  - platform: homeassistant
    id: esptime

i2c:
  sda: GPIO0
  scl: GPIO2
  frequency: 400kHz

sensor:

  - platform: wifi_signal
    name: "${device_name} signal"
    update_interval: 60s
  - platform: wifi_signal
    name: "${device_name} RSSI"
    update_interval: 10min
    unit_of_measurement: '%'
    accuracy_decimals: 0
    filters:
    - lambda: return map(x, -100, -20, 0, 100);

  - platform: uptime
    name: "${device_name} Uptime Sensor"
    id: uptime_sensor
    update_interval: 60s
    internal: true
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();   

  - platform: bme280_i2c
    temperature:
      name: "${device_name} temp"
      oversampling: 16x
      id: temp
      accuracy_decimals: 1
      filters:
        - offset: -6
    pressure:
      name: "${device_name} pres"
      oversampling: 16x
      id: press
      accuracy_decimals: 1
      internal: true
    humidity:
      name: "${device_name} humidity"
      oversampling: 16x
      accuracy_decimals: 1
      filters:
       - offset: 7
      id: hum
    address: 0x76
    update_interval: 60s
    iir_filter: 16x


  - platform: template
    name: "${device_name} pressure"
    id: prsmm
    lambda: return id(press).state*0.750063755419211 ;
    update_interval: 60s
    unit_of_measurement: 'ммРтСт'
    icon: 'mdi:thermometer-lines'
    accuracy_decimals: 1

    
text_sensor:
  - platform: template
    name: "${device_name} Uptime"
    id: uptime_human
    icon: mdi:clock-start

switch:
  - platform: restart
    name: "${device_name} restart"
    id: restart_sw
